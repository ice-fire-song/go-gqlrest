{{ reserveImport "context"  }}
{{ reserveImport "fmt"  }}
{{ reserveImport "io"  }}
{{ reserveImport "strconv"  }}
{{ reserveImport "time"  }}
{{ reserveImport "sync"  }}
{{ reserveImport "errors"  }}
{{ reserveImport "bytes"  }}
{{ reserveImport "strings"  }}
{{ reserveImport "net/http"  }}

{{ reserveImport "github.com/vektah/gqlparser/v2" }}
{{ reserveImport "github.com/vektah/gqlparser/v2/ast" }}
{{ reserveImport "github.com/99designs/gqlgen/graphql" }}
{{ reserveImport "github.com/99designs/gqlgen/graphql/introspection" }}
{{ reserveImport "github.com/go-chi/chi/v5" }}
{{ reserveImport "github.com/speedoops/go-gqlrest/handlerx" }}

func RegisterHandlers(r *chi.Mux, srv http.Handler, prefix string) {
	// REST URL => GraphQL Operation
	restOperation := make(handlerx.RESTOperationMappingType)
	// GraphQL Operation => Fields Selection
	restSelection := make(handlerx.RESTSelectionMappingType)
	// GraphQL Operation => Arguments <Name,Type>
	restArguments := make(handlerx.RESTArgumentsMappingType)
	// GraphQL Operation => Arguments <Name,Type>
	restInputs := make(handlerx.RESTArgumentsMappingType)

	{{ $root := . }}

	// Query
	{{ $object := .QueryRoot -}}
	{{ range $field := $object.Fields -}}
		{{- $prefix := slice $field.Name 0 2 -}}
		{{- $internal := eq $prefix "__" -}}
		{{- if not $internal -}}
		{ // {{ $field.Name }}
			{{ $url := getURL $field -}}
			{{ if $url -}}				
				{{ $method := getMethod $field "GET" -}}
				r.Method({{ $method }}, prefix + {{ $url }}, srv)

				restOperation[{{ $method }} + ":" + prefix + {{ $url }}] = "{{ $field.Name }}"
			{{ end -}}
			{{- $selection := getSelection $root.Objects $field false -}}
			restSelection["{{ $field.Name }}"] = "{{ $selection }}"

			methodArguments := make(handlerx.ArgNameArgTypePair)	
			{{ range $arg := $field.Arguments -}}
				methodArguments["{{ $arg.Name }}"] = "{{ $arg.Type}}"
			{{ end -}}
			restArguments["{{ $field.Name }}"] = methodArguments
		}
		{{ end -}}
	{{ end }}

	// Mutation
	{{ $object := .MutationRoot -}}
	{{ range $field := $object.Fields -}}
		{{- $prefix := slice $field.Name 0 2 -}}
		{{- $internal := eq $prefix "__" -}}
		{{- if not $internal -}}
		{ // {{ $field.Name }}
			{{ $url := getURL $field -}}
			{{ if $url -}}				
				{{ $method := getMethod $field "POST" -}}
				r.Method({{ $method }}, prefix + {{ $url }}, srv)
				
				restOperation[{{ $method }} + ":" + prefix + {{ $url }}] = "{{ $field.Name }}"
			{{ end -}}
			{{- $selection := getSelection $root.Objects $field false -}}
			restSelection["{{ $field.Name }}"] = "{{ $selection }}"

			methodArguments := make(handlerx.ArgNameArgTypePair)	
			{{ range $arg := $field.Arguments -}}
				methodArguments["{{ $arg.Name }}"] = "{{ $arg.Type}}"
			{{ end -}}
			restArguments["{{ $field.Name }}"] = methodArguments
		}
		{{ end -}}
	{{ end }}

	// Input
	{{ range $object := $root.Inputs -}}
		{ // {{ $object.Name }}
			inputArguments := make(handlerx.ArgNameArgTypePair)	
			{{ range $arg := $object.Fields -}}
				inputArguments["{{ $arg.Name }}"] = "{{ $arg.Type}}"
			{{ end -}}
			restInputs["{{ $object.Name }}"] = inputArguments
		}
	{{ end }}

	handlerx.SetupHTTP2GraphQLMapping(restOperation, restSelection, restArguments, restInputs)
}

